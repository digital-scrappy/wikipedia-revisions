#+Title: Documentation for various helper functions
* preliminary results:


#+begin_quote
avg. rho: emp -> 0.36473591446118697
avg. pval: emp -> 0.41395059623960395

avg. rho: wage -> 0.40135077440409767
avg. pval: wage -> 0.36451839945463854

avg. rho: emp_growth -> 0.315427998495521
avg. pval: emp_growth -> 0.49933698369676244

avg. rho: wage_growth -> 0.32272633278255625
avg. pval: wage_growth -> 0.4889306728227626
#+end_quote
* TODO DeTrending
* TODO Qualitative analysis of edits
* TODO Get measurement of edit steady state
* TODO learn 
tomotopy
structural topic modelling in R
berttopic


* Methodological notes
The estimates of the oews estimates are calculated for a specific month (in our case I selected only the ones for May) but they rely on the 6 most recent surveys (2 per year) to produce an estimate.

#+begin_quote
The May 2019 employment and wage estimates were calculated using data collected in the May 2019, November 2018, May 2018, November 2017, May 2017, and November 2016 semi-annual panels. 
--- https://www.bls.gov/oes/oes_ques.htm#overview
#+end_quote

Since we still have yearly estimates for labour statistic we use the edits accumulated edits in the 12 months up to and including the month of the estimate.
For May 2012 we count the edits starting with June 2011 ending with May 2012
* Data 
overall source for data:
https://www.bls.gov/oes/tables.htm
specific source link https://www.bls.gov/oes/special.requests/oesm21nat.zip
potentially better estimates for employment stats are here https://www.bls.gov/oes/oes-mb3-methods.htm
* Requirements
can be either installed via poetry or pip using `pip install -r requirements.txt`

* Important functions / files

** get_pages_for_occupations()
A function to retrieve the candidate links the top n link returned by wikipedia search for each occupation


Args:
 - in_path (str) : the path to the xlsx file holding the bls soc structure

 - db_path (str) : the path to the sqlite db storing the data

 - group_level (str): The the level at which to extract occupations can be one of either ["Minor  Group", "Broad Group", "Detailed Occupation"]

 - srlimit (int) : the number of top search results to use


Returns:
  None

 
** terminal_interface.py

a terminal programm for selecting from the candidate links

